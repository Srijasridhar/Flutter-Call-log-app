flutter create call_log_app
cd call_log_app
dependencies:
  flutter:
    sdk: flutter
  call_log: ^4.1.0
import 'package:flutter/material.dart';
import 'package:call_log/call_log.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Call Log Access App',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: PermissionScreen(),
    );
  }
}

class PermissionScreen extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Call Log Access App'),
      ),
      body: Center(
        child: ElevatedButton(
          onPressed: () async {
            bool hasPermission = await checkPermission();
            if (hasPermission) {
              Navigator.push(
                context,
                MaterialPageRoute(builder: (context) => CallLogScreen()),
              );
            } else {
              // Handle permission denial
              print('Permission denied');
            }
          },
          child: Text('Grant Permission'),
        ),
      ),
    );
  }

  Future<bool> checkPermission() async {
    return await CallLog.hasPermission();
  }
}

class CallLogScreen extends StatefulWidget {
  @override
  _CallLogScreenState createState() => _CallLogScreenState();
}

class _CallLogScreenState extends State<CallLogScreen> {
  List<CallLogEntry> _callLogs = [];

  @override
  void initState() {
    super.initState();
    _getCallLogs();
  }

  Future<void> _getCallLogs() async {
    Iterable<CallLogEntry> entries = await CallLog.get();
    setState(() {
      _callLogs = entries.toList();
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Call Log'),
      ),
      body: ListView.builder(
        itemCount: _callLogs.length,
        itemBuilder: (context, index) {
          return ListTile(
            title: Text(_callLogs[index].name ?? 'Unknown'),
            subtitle: Text(
              'Number: ${_callLogs[index].number}\n'
              'Type: ${_callLogs[index].callType}\n'
              'Duration: ${_callLogs[index].duration} seconds\n'
              'Timestamp: ${_callLogs[index].timestamp}',
            ),
          );
        },
      ),
    );
  }
}
flutter run
